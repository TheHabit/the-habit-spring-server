# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps: 
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Add Github Actions IP to SG
      run: |
        aws ec2 authorize-security-group-ingress --group-name ${{secrets.AWS_SG_NAME}} --protocol tcp --port ${{AWS_ACCESS_PORT}} --cidr ${{steps.ip.outputs.ipv4}}/32
      env: 
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY}}
        AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
        
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Set yml
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env:
        spring.config.import: ${{ secrets.CONFIG_IP }}
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Docker build and push
      run: 
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }} ./
        docker push ${{ secrets.DOCKER_REPO }}
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time
      
    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-name ${{ secrets.AWS_SG_NAME }} --protocol tcp --port ${{secrets.AWS_ACCESS_PORT}} --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env: 
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY}}
        AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
      if: always()
      
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
