# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    steps:
#     - name: configure aws credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY}}
#         aws-region: ${{secrets.AWS_DEFAULT_REGION}}
          
#     - name: Get Github action IP
#       id: ip
#       uses: haythem/public-ip@v1.2

#     - name: Add Github Actions IP to SG
#       run: |
#         aws ec2 authorize-security-group-ingress --group-id ${{secrets.AWS_SG_ID}} --region ${{secrets.AWS_DEFAULT_REGION}} --protocol tcp --port 22 --cidr ${{steps.ip.outputs.ipv4}}/32
#       env: 
#         AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY}}
#         AWS_REGION: ${{secrets.AWS_DEFAULT_REGION}}
        
#    - uses: actions/checkout@v3
#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: maven
#
#    - name: Set yml
#      uses: microsoft/variable-substitution@v1
#      with:
#        files: ./src/main/resources/application.yml
#      env:
#        spring.config.import: ${{ secrets.CONFIG_IP }}
#
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#    - name: Docker build and push
#      run: |
#        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#        docker build -t ${{ secrets.DOCKER_REPO }} ./
#        docker push ${{ secrets.DOCKER_REPO }}
#    - name: Get timestamp
#      uses: gerred/actions/current-time@master
#      id: current-time
      
#     - name: Remove Github Actions IP from security group
#       run: |
#         aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --region ${{secrets.AWS_DEFAULT_REGION}} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
#       env: 
#         AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
#         AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
#         AWS_REGION: ${{secrets.AWS_DEFAULT_REGION}}
#       if: always()
      
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
#
#   deploy:
#       name: CD with EB
#       runs-on: ubuntu-latest
#       needs: build
      
#       steps:
#       - uses: actions/checkout@v3
      
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#           aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          
#       - name: Get current time
#         uses: 1466587594/get-current-time@v2
#         id: current-time
#         with:
#           format: YYYY-MM-DDTHH-mm-ss
#           utcOffset: "+09:00"    
          
#       - name: Generate deployment directory
#         run: |
#           mkdir -p deploy
#           cp Dockerrun.aws.json deploy/Dockerrun.aws.json
#           cd deploy && zip -r deploy.zip .
#       - name: Deploy with EB
#         uses: einaregilsson/beanstalk-deploy@v14
#         with:
#           aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#           aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#           region: ${{ secrets.AWS_DEFAULT_REGION }}
#           environment_name: ${{ secrets.AWS_EB_ENV_NAME }}
#           application_name: ${{ secrets.AWS_EB_APP_NAME }}
#           version_label: thehabit-${{steps.current-time.outputs.formattedTime}}
#           deployment_package: deploy/deploy.zip
#           wait_for_environment_recovery: 200
